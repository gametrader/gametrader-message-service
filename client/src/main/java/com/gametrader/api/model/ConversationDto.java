/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gametrader.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.gametrader.api.model.MessageEntity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConversationDto
 */
@JsonPropertyOrder({
  ConversationDto.JSON_PROPERTY_ID,
  ConversationDto.JSON_PROPERTY_POST_ID,
  ConversationDto.JSON_PROPERTY_POST_OWNER_ID,
  ConversationDto.JSON_PROPERTY_PARTICIPANT_ID,
  ConversationDto.JSON_PROPERTY_MESSAGE
})
@JsonTypeName("ConversationDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-10T09:32:19.507264800+02:00[Europe/Belgrade]")
public class ConversationDto {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_POST_ID = "postId";
  private Long postId;

  public static final String JSON_PROPERTY_POST_OWNER_ID = "postOwnerId";
  private Long postOwnerId;

  public static final String JSON_PROPERTY_PARTICIPANT_ID = "participantId";
  private Long participantId;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private List<MessageEntity> message = null;


  public ConversationDto id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public ConversationDto postId(Long postId) {
    
    this.postId = postId;
    return this;
  }

   /**
   * Get postId
   * @return postId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPostId() {
    return postId;
  }


  @JsonProperty(JSON_PROPERTY_POST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostId(Long postId) {
    this.postId = postId;
  }


  public ConversationDto postOwnerId(Long postOwnerId) {
    
    this.postOwnerId = postOwnerId;
    return this;
  }

   /**
   * Get postOwnerId
   * @return postOwnerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POST_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPostOwnerId() {
    return postOwnerId;
  }


  @JsonProperty(JSON_PROPERTY_POST_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPostOwnerId(Long postOwnerId) {
    this.postOwnerId = postOwnerId;
  }


  public ConversationDto participantId(Long participantId) {
    
    this.participantId = participantId;
    return this;
  }

   /**
   * Get participantId
   * @return participantId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PARTICIPANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getParticipantId() {
    return participantId;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParticipantId(Long participantId) {
    this.participantId = participantId;
  }


  public ConversationDto message(List<MessageEntity> message) {
    
    this.message = message;
    return this;
  }

  public ConversationDto addMessageItem(MessageEntity messageItem) {
    if (this.message == null) {
      this.message = new ArrayList<>();
    }
    this.message.add(messageItem);
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MessageEntity> getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(List<MessageEntity> message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationDto conversationDto = (ConversationDto) o;
    return Objects.equals(this.id, conversationDto.id) &&
        Objects.equals(this.postId, conversationDto.postId) &&
        Objects.equals(this.postOwnerId, conversationDto.postOwnerId) &&
        Objects.equals(this.participantId, conversationDto.participantId) &&
        Objects.equals(this.message, conversationDto.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, postId, postOwnerId, participantId, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    postOwnerId: ").append(toIndentedString(postOwnerId)).append("\n");
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

